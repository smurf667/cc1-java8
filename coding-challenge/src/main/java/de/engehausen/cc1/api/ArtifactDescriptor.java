package de.engehausen.cc1.api;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 * Descriptor of a coding challenge artifact.
 * Used in generating a report when running tests for a
 * challenge participant (i.e. it describes your implementation).
 * <p>There is no need to implement this interface. A working
 * implementation is shipped for your project.</p>
 */
public interface ArtifactDescriptor {

	/**
	 * Property keys.
	 */
	enum Key {
		groupId, artifactId, version;
	}

	/**
	 * Returns an input stream of the <code>pom.properties</code>
	 * file generated by the Maven build.
	 * @return an input stream of the properties file, may be
	 * <code>null</code>. The caller must close the stream.
	 */
	InputStream getPOMProperties();

	/**
	 * Returns a value for the given key of the artifacts'
	 * <code>pom.properties</code> file.
	 * @param key the key for the value to retrieve
	 * @return a value, may be an empty string, but never <code>null</code>.
	 * @throws IOException in case of error
	 */
	default String getPomKey(final Key key) throws IOException {
		final InputStream stream = getPOMProperties();
		if (stream != null) {
			try {
				final Properties props = new Properties();
				props.load(getPOMProperties());
				return props.getProperty(key.name(), "unknown");
			} finally {
				stream.close();
			}
		} else {
			return "unknown";
		}
	}

}
